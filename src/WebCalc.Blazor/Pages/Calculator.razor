@page "/"

@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.Popups
@using WebCalc.Application.Contracts.Services.Settings;
@using WebCalc.Blazor.Components
@using WebCalc.Blazor.ViewModels.Pages.Calculator;
@using WebCalc.Services;
@using WebCalc.Blazor.Components.Calc
@using EventArgs = System.EventArgs;

@implements IDisposable
@inject ICalculatorViewModel viewModel

<div id="calculator-container">
    <SfAppBar id="menu" ColorMode="AppBarColor.Primary">
        <span id="title" class="regular">Calculator</span>
        <AppBarSpacer></AppBarSpacer>
        <SfButton id="add-constant-button" CssClass="menu-button e-round" IsPrimary="true" OnClick="OnAddConstClick">
            <span class="material-symbols-outlined">
                add
            </span>
        </SfButton>
        <SfButton id="settings-button" CssClass="menu-button e-round" IsPrimary="true" OnClick="viewModel.NavigateToSettings">
            <span class="material-symbols-outlined">
                settings
            </span>
        </SfButton>
    </SfAppBar>

    <Calc Id="calc" @ref="@calc" OnNavigateToConsts="viewModel.NavigateToConstants" IsRounding="true"></Calc>

    <SfDialog Target="#calculator-container" Width="500px" @bind-Visible="addConstVisible">
        <DialogTemplates>
            <Content>
                Do you want to add - @calc?.GetDisplayValue(), as constant?
            </Content>
        </DialogTemplates>
        <DialogButtons>
            <DialogButton IsPrimary="true" OnClick="@(()=>viewModel.NavigateToAddingNewConstant(calc?.GetDisplayValue()!))" Content="Yes"></DialogButton>
            <DialogButton OnClick="OnCloseDialogClick" Content="No"></DialogButton>
        </DialogButtons>
    </SfDialog>

    <SfDialog Target="#calculator-container" Width="500px" @bind-Visible="addConstWarningDialogVisible">
        <DialogTemplates>
            <Content>
                You cannot constant value with negative or zero value. Constant should be positive and non zero
            </Content>
        </DialogTemplates>
        <DialogButtons>
            <DialogButton IsPrimary="true" Content="OK" OnClick="@(()=>addConstWarningDialogVisible=false)"></DialogButton>
        </DialogButtons>
    </SfDialog>
</div>

<style>
    #calculator-container {
        display: flex;
        flex-direction: column;
        width: 100%;
        height: 100%;
    }

    #calc {
        flex-grow: 1;
    }

    #menu {
        display: flex;
        flex-direction: row;
        justify-content: flex-end;
        gap: 5px;
    }

    .menu-button {
        margin-top: 5px;
        margin-bottom: 5px;
        background: unset;
        border: unset;
        outline: unset;
    }

    .material-symbols-outlined {
        padding: 2px;
    }
</style>

@code {
    private Calc? calc;
    private bool addConstVisible;
    private bool addConstWarningDialogVisible;

    protected override void OnInitialized()
    {
        viewModel.PropertyChanged += OnViewModelPropertyChanged;

        throw new Exception("hello");
    }

    protected override async Task OnParametersSetAsync()
    {
        await viewModel.SetRoundingFlagAsync();

        if (calc is null)
        {
            throw new ArgumentNullException();
        }

        calc.SetRoundingFlag(viewModel.IsRounding);
    }

    private void OnCloseDialogClick()
    {
        addConstVisible = false;
    }

    private void OnAddConstClick()
    {
        if (viewModel.GetIsPossibleToAddNewConstant())
        {
            addConstVisible = true;
        }
        else
        {
            addConstWarningDialogVisible = true;
        }

    }

    public void Dispose()
    {
        viewModel.PropertyChanged -= OnViewModelPropertyChanged;
    }

    private void OnViewModelPropertyChanged(object? sender, EventArgs e)
    {
        StateHasChanged();
    }
}